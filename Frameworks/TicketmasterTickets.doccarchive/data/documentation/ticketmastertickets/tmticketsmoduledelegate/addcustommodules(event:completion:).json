{"metadata":{"roleHeading":"Instance Method","title":"addCustomModules(event:completion:)","role":"symbol","modules":[{"name":"TicketmasterTickets"}],"symbolKind":"method","required":true,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"addCustomModules"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"event"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:19TicketmasterTickets16TMPurchasedEventV","text":"TMPurchasedEvent"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"customModuleArray","kind":"internalParam"},{"kind":"text","text":": ["},{"text":"TMTicketsModule","kind":"typeIdentifier","preciseIdentifier":"c:@M@TicketmasterTickets@objc(cs)TMTicketsModule"},{"kind":"text","text":"]?) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"externalID":"s:19TicketmasterTickets23TMTicketsModuleDelegateP16addCustomModules5event10completionyAA16TMPurchasedEventV_ySayAA0cD0CGSgctF"},"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"addCustomModules","kind":"identifier"},{"text":"(","kind":"text"},{"text":"event","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMPurchasedEvent","kind":"typeIdentifier","text":"TMPurchasedEvent","preciseIdentifier":"s:19TicketmasterTickets16TMPurchasedEventV"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"customModuleArray","kind":"internalParam"},{"kind":"text","text":": ["},{"text":"TMTicketsModule","kind":"typeIdentifier","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule","preciseIdentifier":"c:@M@TicketmasterTickets@objc(cs)TMTicketsModule"},{"kind":"text","text":"]?) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"current Event and purchased Orders being viewed (includes Event and Venue IDs)"}],"type":"paragraph"}],"name":"event"},{"content":[{"inlineContent":[{"type":"text","text":"an ordered array of custom modules to be rendered (if any)"}],"type":"paragraph"}],"name":"completion"}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"text":"Example usage:","type":"text"}],"type":"paragraph"},{"code":["\/\/ build header view","let headerView = TMModuleHeaderView.build()","\/\/ various configuration options are available","headerView.configure(backgroundImage: backgroundImage)","","\/\/ build header display","\/\/ actually, any UIView will work here, not just TMModuleHeaderView","let headerDisplay = TMTicketsModule.HeaderDisplay(view: headerView as UIView)","","\/\/ define webpage settings","let webpageSettings = TMTicketsModule.WebpageSettings(","    pageTitle: \"Venue Info\", \/\/ user will see this, localize this text","    urlRequest: URLRequest(url: URL(string: \"https:\/\/www.mycoolvenue.com\/venue-info-policies\")!))","","\/\/ build action button that opens that webpage","let actionButton = TMTicketsModule.ActionButton(","    title: \"Venue Info\", \/\/ user will see this, localize this text","    callbackValue: \"venueInfo\", \/\/ non-localized value, for your own code\/analytics","    webpageSettings: webpageSettings)","\/\/ note that Tickets SDK knows how to open a webpage, so handleModuleActionButton() will not be called","","\/\/ modules can have:","\/\/ 1. header only (no buttons)","\/\/ 2. buttons only (no header)","\/\/ 3. both header and buttons","","\/\/ build module","let module = TMTicketsModule(","    identifier: \"com.myDemoApp.venueInfo\", \/\/ a module name unique to your app","    headerDisplay: headerDisplay,","    actionButtons: [actionButton]) \/\/ you can show 0 to 3 buttons","","\/\/ return custom modules (in display order)","completion([module])"],"type":"codeListing","syntax":null}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets","doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleDelegate"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ticketmastertickets\/tmticketsmoduledelegate\/addcustommodules(event:completion:)"]}],"identifier":{"url":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleDelegate\/addCustomModules(event:completion:)","interfaceLanguage":"swift"},"abstract":[{"text":"Method is invoked when the user is viewing a specific Event. Client app needs to define an array of custom modules (if any) and return them to the Tickets SDK.","type":"text"}],"references":{"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMPurchasedEvent":{"type":"topic","title":"TMPurchasedEvent","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMPurchasedEvent","url":"\/documentation\/ticketmastertickets\/tmpurchasedevent","abstract":[{"text":"an Event purchased by the User, containing Event Information, Orders, and Tickets","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TMPurchasedEvent","kind":"identifier"}],"navigatorTitle":[{"text":"TMPurchasedEvent","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModule":{"abstract":[{"type":"text","text":"create a custom module to be displayed underneath the userâ€™s list of Tickets on the Tickets listing page"}],"kind":"symbol","title":"TMTicketsModule","type":"topic","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule","url":"\/documentation\/ticketmastertickets\/tmticketsmodule","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"TMTicketsModule","kind":"identifier"}],"navigatorTitle":[{"text":"TMTicketsModule","kind":"identifier"}]},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets":{"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets","title":"TicketmasterTickets","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/ticketmastertickets","abstract":[{"text":"Implementation of Ticketmaster post-purchase functionality such as viewing purchased Events, Tickets, and Barcodes.","type":"text"}]},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleDelegate/addCustomModules(event:completion:)":{"type":"topic","title":"addCustomModules(event:completion:)","url":"\/documentation\/ticketmastertickets\/tmticketsmoduledelegate\/addcustommodules(event:completion:)","role":"symbol","abstract":[{"text":"Method is invoked when the user is viewing a specific Event. Client app needs to define an array of custom modules (if any) and return them to the Tickets SDK.","type":"text"}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleDelegate\/addCustomModules(event:completion:)","required":true,"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"addCustomModules","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"event"},{"text":": ","kind":"text"},{"text":"TMPurchasedEvent","kind":"typeIdentifier","preciseIdentifier":"s:19TicketmasterTickets16TMPurchasedEventV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"text":": (","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"customModuleArray","kind":"internalParam"},{"text":": [","kind":"text"},{"text":"TMTicketsModule","kind":"typeIdentifier","preciseIdentifier":"c:@M@TicketmasterTickets@objc(cs)TMTicketsModule"},{"kind":"text","text":"]?) -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleDelegate":{"navigatorTitle":[{"kind":"identifier","text":"TMTicketsModuleDelegate"}],"url":"\/documentation\/ticketmastertickets\/tmticketsmoduledelegate","type":"topic","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleDelegate","role":"symbol","kind":"symbol","title":"TMTicketsModuleDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TMTicketsModuleDelegate"}],"abstract":[{"type":"text","text":"optional delegate to implement prebuilt and custom "},{"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule","isActive":true,"type":"reference"},{"type":"text","text":" to be rendered on the Tickets listing page"}]}},"variantOverrides":[{"patch":[{"value":"TMTicketsModule","op":"replace","path":"\/references\/doc:~1~1com.ticketmaster.TicketmasterTickets~1documentation~1TicketmasterTickets~1TMTicketsModule\/title"},{"path":"\/references\/doc:~1~1com.ticketmaster.TicketmasterTickets~1documentation~1TicketmasterTickets~1TMTicketsModule\/fragments","value":[{"kind":"identifier","text":"TMTicketsModule"}],"op":"replace"}],"traits":[{"interfaceLanguage":"occ"}]}]}