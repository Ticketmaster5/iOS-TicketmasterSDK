{"identifier":{"url":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/CustomModules","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/ticketmastertickets\/custommodules"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/ticketmastertickets\/custommodules"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"modules":[{"name":"TicketmasterTickets"}],"roleHeading":"Article","title":"Custom Module","role":"article"},"abstract":[{"type":"text","text":"A "},{"type":"reference","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule","isActive":true},{"type":"text","text":" is defined by three values:"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets"]]},"kind":"article","sections":[],"primaryContentSections":[{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A unique identifier string","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"An optional Header View","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"0 to 3 Buttons"}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"text":"See: ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule\/init(identifier:headerDisplay:actionButtons:)","type":"reference"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Modules are built and returned in ","type":"text"},{"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleDelegate\/addCustomModules(event:completion:)","isActive":true,"type":"reference"}]},{"code":["extension MyClass: TMTicketsModuleDelegate {    ","","    func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","        \/\/ build a UIView","        let view = UIView()","        view.backgroundColor = .red","    ","        \/\/ build Header with UIView","        let header = TMTicketsModule.HeaderDisplay(view: view)","    ","        \/\/ build buttons","        let button1 = TMTicketsModule.ActionButton(title: \"One\")","        let button2 = TMTicketsModule.ActionButton(title: \"Two\")","        let button3 = TMTicketsModule.ActionButton(title: \"Three\")","","        \/\/ build module with header and buttons","        let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                    headerDisplay: header,","                                    actionButtons: [button1, button2, button3])","    ","        \/\/ return modules in display order","        completion([module])","    }","}"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Output:"},{"text":" ","type":"text"},{"identifier":"Module_DefaultAspect.jpg","type":"image"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s examine each of these three values in detail."}]},{"type":"heading","level":2,"text":"Identifier","anchor":"Identifier"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A globally unique indentifier is best to avoid conflicts with any internal or pre-built module names."}]},{"inlineContent":[{"type":"text","text":"We recommend using a reverse URL style."}],"type":"paragraph"},{"inlineContent":[{"text":"Unique examples:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"“com.ticketmaster.seatUpgrades”","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"“com.nfl.broncosSeating”","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"“com.myDemoApp.demoModule”"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Header","type":"heading","text":"Header","level":2},{"inlineContent":[{"type":"text","text":"While optional, the Header is the most easily visible component of a Module."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"A Header (","type":"text"},{"type":"reference","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule\/HeaderDisplay-swift.class","isActive":true},{"type":"text","text":") is simply a wrapper around a UIView."}]},{"inlineContent":[{"text":"Note that a Module can contain a Header with no Buttons, or Buttons with no Header.","type":"text"}],"type":"paragraph"},{"type":"heading","level":3,"text":"Size","anchor":"Size"},{"inlineContent":[{"type":"text","text":"The Header is automatically resized to the width of the user’s phone, so you can only really control the height. This is done by setting an aspect ratio."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The default aspect ratio (3x2) is recommended for visual consistancy.","type":"text"}]},{"type":"heading","anchor":"Header-Default-Aspect-Ratio","text":"Header Default Aspect Ratio","level":2},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Build a module with a Red header, using the default aspect ratio (3x2)."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"codeListing","syntax":null,"code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ build a UIView (with default aspect ratio 3x2)","    let view = UIView()","    view.backgroundColor = .red","    ","    \/\/ build header with UIView","    let header = TMTicketsModule.HeaderDisplay(view: view)","    ","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\")","    let button2 = TMTicketsModule.ActionButton(title: \"Two\")","    let button3 = TMTicketsModule.ActionButton(title: \"Three\")","","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: header,","                                 actionButtons: [button1, button2, button3])","    ","    \/\/ return module","    completion([module])","}"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Output:","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Module_DefaultAspect.jpg"}]},{"text":"Header Custom Aspect Ratio","type":"heading","anchor":"Header-Custom-Aspect-Ratio","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Header inherits it’s aspect ratio from the provided UIView, so by setting the size of the UIView you can alter the aspect ratio of the Header."}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Build a module with a Red header, using a custom defined aspect ratio (1x1)."}],"type":"paragraph"}]}]},{"type":"codeListing","code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ build a UIView (with a defined aspect ratio)","    let view = UIView(frame: CGRect(x: 0, y: 0, width: 1, height: 1))","    view.backgroundColor = .red","    ","    \/\/ build header with UIView","    let header = TMTicketsModule.HeaderDisplay(view: view)","    ","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\")","    let button2 = TMTicketsModule.ActionButton(title: \"Two\")","    let button3 = TMTicketsModule.ActionButton(title: \"Three\")","","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: header,","                                 actionButtons: [button1, button2, button3])","    ","    \/\/ return module","    completion([module])","}"],"syntax":null},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Output:"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"image","identifier":"Module_DefinedAspect.jpg"}],"type":"paragraph"},{"anchor":"Custom-Header-Image","type":"heading","level":2,"text":"Custom Header Image"},{"inlineContent":[{"type":"text","text":"Headers can also be created with a UIImage (as a convenience). The aspect ratio of the Header is inherited from the size of the UIImage."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build a module with an Image header, aspect ratio is defined by Image size:"}]}]}]},{"syntax":null,"code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ load UIImage","    let image = UIImage(imageLiteralResourceName: \"HotDogs.jpg\")","    ","    \/\/ build header with UIImage","    let header = TMTicketsModule.HeaderDisplay(image: image)","    ","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\")","    let button2 = TMTicketsModule.ActionButton(title: \"Two\")","    let button3 = TMTicketsModule.ActionButton(title: \"Three\")","","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: header,","                                 actionButtons: [button1, button2, button3])","    ","    \/\/ return module","    completion([module])","}"],"type":"codeListing"},{"items":[{"content":[{"inlineContent":[{"text":"Output:","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"image","identifier":"Module_Image.jpg"}],"type":"paragraph"},{"level":2,"text":"HeaderView Builder","anchor":"HeaderView-Builder","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While you are welcome to build a Header using any UIView, a helpful Header builder has been provided."}]},{"inlineContent":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView","isActive":true},{"type":"text","text":" can help you quickly build a UIView for presentation."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The header builder supports:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Three lines of custom Text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Gradient overlay (from top-left and bottom-right corners)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"UIColor background"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundColor:)","isActive":true}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"text":"UIImage background","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:)","isActive":true}]}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"MKCoordinateRegion map"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:mapCoordinateRegion:mapAnnotation:)"}]}]}]}]},{"content":[{"inlineContent":[{"text":"QR Code","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:qrCodeValue:)","type":"reference"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"2D Barcode","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:barcode2DValue:)"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Audio\/Video Content","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:avContentURL:disableLoopingContent:disableAVAudio:)","isActive":true}]}]}],"type":"unorderedList"}]}]},{"anchor":"HeaderView-Builder-Color","text":"HeaderView Builder: Color","level":2,"type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Build a module with a Red header, using the Header View builder:","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ build a UIView (with default aspect ratio 3x2)","    let headerView = TMTicketsModuleHeaderView.build()","    headerView.configure(backgroundColor: .red)","    ","    \/\/ build header with HeaderView (a UIView)","    let header = TMTicketsModule.HeaderDisplay(view: headerView)","    ","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\")","    let button2 = TMTicketsModule.ActionButton(title: \"Two\")","    let button3 = TMTicketsModule.ActionButton(title: \"Three\")","","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: header,","                                 actionButtons: [button1, button2, button3])","    ","    \/\/ return module","    completion([module])","}"],"syntax":null},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output:"}]}]}]},{"type":"paragraph","inlineContent":[{"identifier":"Module_DefaultAspect.jpg","type":"image"}]},{"anchor":"HeaderView-Builder-Image-+-Text-+-Gradient","level":2,"text":"HeaderView Builder: Image + Text + Gradient","type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"Build a module with an Image, Text, and Gradient:","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"syntax":null,"code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ load UIImage","    let image = UIImage(imageLiteralResourceName: \"HotDogs.jpg\")","    ","    \/\/ build a UIView with a text, gradient, and image","    let headerView = TMTicketsModuleHeaderView.build()","    headerView.configure(topLabelText: \"Food\",","                         topLabelTextAlignment: .left,","                         centerLabelText: \"Drinks\",","                         centerLabelTextAlignment: .center,","                         bottomLabelText: \"Fun\",","                         bottomLabelTextAlignment: .right,","                         gradientAlpha: 1.0,","                         backgroundImage: image)","    ","    \/\/ build header with HeaderView (a UIView)","    let header = TMTicketsModule.HeaderDisplay(view: headerView)","    ","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\")","    let button2 = TMTicketsModule.ActionButton(title: \"Two\")","    let button3 = TMTicketsModule.ActionButton(title: \"Three\")","","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: header,","                                 actionButtons: [button1, button2, button3])","    ","    \/\/ return module","    completion([module])","}"],"type":"codeListing"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Output:","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"identifier":"Module_ImageText.jpg","type":"image"}],"type":"paragraph"},{"text":"HeaderView Builder: Map","type":"heading","level":2,"anchor":"HeaderView-Builder-Map"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Build a module with a Map and Text:","type":"text"}]}]}]},{"syntax":null,"type":"codeListing","code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ define map region and zoom (span)","    let mapRegion = MKCoordinateRegion(","        center: CLLocationCoordinate2D(latitude: 34.0734, longitude: -118.2402),","        span: MKCoordinateSpan(latitudeDelta: 0.02, longitudeDelta: 0.02))","    ","    \/\/ define map point of interest","    let mapAnnotation = TMTicketsModuleHeaderView.MapAnnotation(","        coordinate: CLLocationCoordinate2D(latitude: 34.0735, longitude: -118.2456),","        title: \"Lot 1\")","    ","    \/\/ build a UIView with a text, gradient, and image","    let headerView = TMTicketsModuleHeaderView.build()","    headerView.configure(topLabelText: \"Parking: Lot 1\",","                         mapCoordinateRegion: mapRegion,","                         mapAnnotation: mapAnnotation)","    ","    \/\/ build header with HeaderView (a UIView)","    let header = TMTicketsModule.HeaderDisplay(view: headerView)","    ","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\")","    let button2 = TMTicketsModule.ActionButton(title: \"Two\")","    let button3 = TMTicketsModule.ActionButton(title: \"Three\")","","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: header,","                                 actionButtons: [button1, button2, button3])","    ","    \/\/ return module","    completion([module])","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Output:","type":"text"}]}]}]},{"inlineContent":[{"type":"image","identifier":"Module_MapText.jpg"}],"type":"paragraph"},{"level":2,"type":"heading","text":"HeaderView Builder: QR Code","anchor":"HeaderView-Builder-QR-Code"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Build a module with a QR Code, Image, Gradient and Text:","type":"text"}]}]}]},{"code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ build a UIView with a text, QR code, gradient, and image","    let headerView = TMTicketsModuleHeaderView.build()","    headerView.configure(topLabelText: \"Broncos Fan Voucher\",","                         bottomLabelText: \"Stored Value: $58.90\",","                         gradientAlpha: 1.0,","                         backgroundImage: UIImage(named: \"BroncosPlay.jpg\"),","                         qrCodeValue: \"1234567890ABCDEF\")","","    \/\/ build header with HeaderView (a UIView)","    let header = TMTicketsModule.HeaderDisplay(view: headerView)","","    \/\/ build module with header, but no buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: header,","                                 actionButtons: nil) \/\/ no buttons","    ","    \/\/ return module","    completion([module])","}"],"type":"codeListing","syntax":null},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Output:"}],"type":"paragraph"}]}]},{"inlineContent":[{"identifier":"Module_QRText.jpg","type":"image"}],"type":"paragraph"},{"anchor":"HeaderView-Builder-Video","text":"HeaderView Builder: Video","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The video will start playing as soon as the user scrolls down to the module."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build a module with a Video and Text:"}]}]}]},{"type":"codeListing","code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ load video from local file or web URL","    let ticketsMovieURL = Bundle.main.url(forResource: \"BroncosMobileTickets\", withExtension: \"mp4\")!","    ","    \/\/ build a UIView with a text, QR code, and image","    let headerView = TMTicketsModuleHeaderView.build()","    headerView.configure(topLabelText: \"Entry Demo\",","                         avContentURL: ticketsMovieURL)","    ","    \/\/ build header with HeaderView (a UIView)","    let header = TMTicketsModule.HeaderDisplay(view: headerView)","","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\")","    let button2 = TMTicketsModule.ActionButton(title: \"Two\")","    let button3 = TMTicketsModule.ActionButton(title: \"Three\")","","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: header,","                                 actionButtons: [button1, button2, button3])","    ","    \/\/ return module","    completion([module])","}"],"syntax":null},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Output:"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"identifier":"Module_VideoText.jpg","type":"image"}]},{"anchor":"Buttons","text":"Buttons","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Buttons ("},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule\/ActionButton"},{"text":") are assigned Actions that occur when the button is pressed.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Currently, only two Actions are supported:"}]},{"items":[{"content":[{"inlineContent":[{"text":"open a given webpage inside Tickets SDK (in a webview)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"callback to module delegate (inside your app)","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that a Module can contain a Header with no Buttons, or Buttons with no Header."}]},{"text":"Button Action: Callback","anchor":"Button-Action-Callback","type":"heading","level":2},{"inlineContent":[{"text":"If webpage settings are not defined on the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule\/ActionButton"},{"text":", then when the user presses the button, the callback method on the module delegate will be called: ","type":"text"},{"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleDelegate\/handleModuleActionButton(event:module:button:completion:)","isActive":true,"type":"reference"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build three buttons (with no header):"}]}]}],"type":"unorderedList"},{"type":"codeListing","syntax":null,"code":["extension MyClass: TMTicketsModuleDelegate {","    ","    func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","        \/\/ build buttons","        let button1 = TMTicketsModule.ActionButton(title: \"One\")","        let button2 = TMTicketsModule.ActionButton(title: \"Two\")","        let button3 = TMTicketsModule.ActionButton(title: \"Three\")","","        \/\/ build module with header and buttons","        let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                     headerDisplay: nil, \/\/ no header","                                     actionButtons: [button1, button2, button3])","        ","        \/\/ return module","        completion([module])","    }","    ","    func handleModuleActionButton(","        event: TMPurchasedEvent,","        module: TMTicketsModule,","        button: TMTicketsModule.ActionButton,","        completion: @escaping (TMTicketsModule.WebpageSettings?) -> Void) {","","        \/\/ this is not called if webpage settings are already defined","        if module.identifier == \"com.myDemoApp.demoModule\" {","            if button.callbackValue == \"One\" {","                print(\"Action: One\")","                \/\/ handle in your own code, do not close modal Tickets Listing page ","                \/\/ do not call completion","                handle(button: button)","                ","            } else if button.callbackValue == \"Two\" {","                print(\"Action: Two\")","                \/\/ handle in your own code, but first close modal Tickets Listing page","                \/\/ call completion with nil","                completion(nil)","                handle(button: button)","","            } else if button.callbackValue == \"Three\" {","                print(\"Action: Three\")","                \/\/ open a webpage inside Tickets SDK (webview)","                let request = URLRequest(url: URL(string: \"https:\/\/www.mlb.com\")!)","                let settings = TMTicketsModule.WebpageSettings(pageTitle: \"MLB Homepage\",","                                                               urlRequest: request)","                \/\/ call completion with webpage settings","                completion(settings)","            }","        }","    }","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Output:","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Button_Three.jpg"}]},{"anchor":"Button-Action-Callback-Completion","type":"heading","text":"Button Action: Callback Completion","level":2},{"inlineContent":[{"type":"text","text":"Notice that the handleModuleActionButton delegate method has a completion closure."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is used to inform Tickets SDK of which behavior you would like when the user presses a Module Button."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not close modal Tickets Listing page and handle button in your own code:"}]}]}]},{"code":["if button.callbackValue == \"One\" {","    print(\"Action: One\")","    \/\/ handle in your own code, do not close modal Tickets Listing page ","    \/\/ do not call completion","    handle(button: button)"],"type":"codeListing","syntax":null},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Close modal Tickets Listing page first, then handle button in your own code:"}]}]}]},{"syntax":null,"code":["} else if button.callbackValue == \"Two\" {","    print(\"Action: Two\")","    \/\/ handle in your own code, but first close modal Tickets Listing page","    \/\/ call completion with nil","    completion(nil)","    handle(button: button)"],"type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Do not close modal Tickets Listing page, have Tickets SDK open a webpage for you:"}],"type":"paragraph"}]}]},{"code":["} else if button.callbackValue == \"Three\" {","    print(\"Action: Three\")","    \/\/ open a webpage inside Tickets SDK (webview)","    let request = URLRequest(url: URL(string: \"https:\/\/www.mlb.com\")!)","    let settings = TMTicketsModule.WebpageSettings(pageTitle: \"MLB Homepage\",","                                                   urlRequest: request)","    \/\/ call completion with webpage settings","    completion(settings)"],"syntax":null,"type":"codeListing"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output:"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Button_MLBWebpage.jpg"}]},{"level":2,"anchor":"Button-Action-Webpage-Settings","type":"heading","text":"Button Action: Webpage Settings"},{"inlineContent":[{"type":"text","text":"You can provide the Button webpage settings ahead of time instead of waiting for the callback."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Note that is this case, the handleModuleActionButton delegate method will not be called.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Build one button with pre-defined webpage settings (with no header):"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ build webpage settings","    let request = URLRequest(url: URL(string: \"https:\/\/www.mlb.com\")!)","    let settings = TMTicketsModule.WebpageSettings(pageTitle: \"MLB Homepage\",","                                                   urlRequest: request)","    ","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\",","                                               webpageSettings: settings)","    ","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: nil, \/\/ no header","                                 actionButtons: [button1])","    ","    \/\/ return module","    completion([module])","}"],"syntax":null},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output:"}]}]}]},{"type":"paragraph","inlineContent":[{"identifier":"Button_MLBWebpage.jpg","type":"image"}]},{"anchor":"Button-Action-Webpage-Settings-+-State","level":2,"type":"heading","text":"Button Action: Webpage Settings + State"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Typically you will want to pass in some state variables to the webpage. For example, maybe which event the user is viewing."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"This can be done with URL parameters.","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"You may also want to pass values securely. For example, the user’s login state (oauth token).","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"This can be done with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule\/OAuthCookieSettings"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"items":[{"content":[{"inlineContent":[{"text":"Build button with pre-defined webpage settings including eventID and user OAuthToken:","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ build cookie settings","    let cookie = TMTicketsModule.OAuthCookieSettings(name: \"userAuth\",","                                                     value: \"oauthToken1234\",","                                                     webDomains: [\".mlb.com\"])","    ","    \/\/ build webpage settings with parameters","    let request = URLRequest(url: URL(string: \"https:\/\/www.mlb.com?event=\\(event.info.identifier)\")!)","    let settings = TMTicketsModule.WebpageSettings(pageTitle: \"MLB Homepage\",","                                                   urlRequest: request,","                                                   oauthCookieSettings: cookie)","    ","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\",","                                               webpageSettings: settings)","    ","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: nil, \/\/ no header","                                 actionButtons: [button1])","    ","    \/\/ return module","    completion([module])","}"],"type":"codeListing","syntax":null},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"You can also easily attach Ticketmaster OAuth Tokens this way:","type":"text"}]}]}],"type":"unorderedList"},{"code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ build cookie settings (attaching Ticketmaster Archtics Modern Accounts token)","    let cookie = TMTicketsModule.OAuthCookieSettings(name: \"tmOAuth\",","                                                     webDomains: [\".mlb.com\"],","                                                     backend: .TeamModernAccounts)","    ","    \/\/ build webpage settings with parameters","    let request = URLRequest(url: URL(string: \"https:\/\/www.mlb.com?event=\\(event.info.identifier)\")!)","    let settings = TMTicketsModule.WebpageSettings(pageTitle: \"MLB Homepage\",","                                                   urlRequest: request,","                                                   oauthCookieSettings: cookie)","    ","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\",","                                               webpageSettings: settings)","    ","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: nil, \/\/ no header","                                 actionButtons: [button1])","    ","    \/\/ return module","    completion([module])","}"],"type":"codeListing","syntax":null},{"type":"heading","level":2,"anchor":"Pre-Built-Modules","text":"Pre-Built Modules"},{"inlineContent":[{"text":"A few basic modules have already been created for you, see: ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsPrebuiltModule","type":"reference"}],"type":"paragraph"},{"text":"API Documentation","level":2,"type":"heading","anchor":"API-Documentation"},{"inlineContent":[{"text":"For more options see: ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule","type":"reference"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsPrebuiltModule":{"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TMTicketsPrebuiltModule"}],"navigatorTitle":[{"kind":"identifier","text":"TMTicketsPrebuiltModule"}],"kind":"symbol","abstract":[{"text":"useful pre-built ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule","isActive":true},{"text":" for the Tickets listing page","type":"text"}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsPrebuiltModule","url":"\/documentation\/ticketmastertickets\/tmticketsprebuiltmodule","title":"TMTicketsPrebuiltModule"},"Module_Image.jpg":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Module_Image.jpg"}],"alt":"Image Header","identifier":"Module_Image.jpg"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleDelegate/handleModuleActionButton(event:module:button:completion:)":{"title":"handleModuleActionButton(event:module:button:completion:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"handleModuleActionButton","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"event"},{"kind":"text","text":": "},{"text":"TMPurchasedEvent","preciseIdentifier":"s:19TicketmasterTickets16TMPurchasedEventV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"module","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@TicketmasterTickets@objc(cs)TMTicketsModule","text":"TMTicketsModule"},{"kind":"text","text":", "},{"text":"button","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TMTicketsModule","kind":"typeIdentifier","preciseIdentifier":"c:@M@TicketmasterTickets@objc(cs)TMTicketsModule"},{"kind":"text","text":"."},{"preciseIdentifier":"s:19TicketmasterTickets15TMTicketsModuleC12ActionButtonC","text":"ActionButton","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"openWebpageSettings","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@TicketmasterTickets@objc(cs)TMTicketsModule","text":"TMTicketsModule","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:19TicketmasterTickets15TMTicketsModuleC15WebpageSettingsC","kind":"typeIdentifier","text":"WebpageSettings"},{"kind":"text","text":"?) -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":")"}],"required":true,"type":"topic","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleDelegate\/handleModuleActionButton(event:module:button:completion:)","abstract":[{"type":"text","text":"Method is invoked if user has pressed a button on a custom module, and unique handling is required."}],"url":"\/documentation\/ticketmastertickets\/tmticketsmoduledelegate\/handlemoduleactionbutton(event:module:button:completion:)","role":"symbol"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets":{"kind":"symbol","type":"topic","role":"collection","url":"\/documentation\/ticketmastertickets","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets","abstract":[{"text":"Implementation of Ticketmaster post-purchase functionality such as viewing purchased Events, Tickets, and Barcodes.","type":"text"}],"title":"TicketmasterTickets"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleHeaderView/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:avContentURL:disableLoopingContent:disableAVAudio:)":{"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"configure","kind":"identifier"},{"kind":"text","text":"("},{"text":"topLabelText","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"topLabelTextAlignment"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@E@NSTextAlignment","text":"NSTextAlignment","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"centerLabelText","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"centerLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@E@NSTextAlignment","text":"NSTextAlignment"},{"kind":"text","text":"?, "},{"text":"bottomLabelText","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"text":"bottomLabelTextAlignment","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@E@NSTextAlignment","text":"NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"gradientAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"text":"?, ","kind":"text"},{"text":"avContentURL","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier","text":"URL"},{"kind":"text","text":", "},{"text":"disableLoopingContent","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"disableAVAudio","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"configure with Audio\/Video content (typically a movie file)"}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:avContentURL:disableLoopingContent:disableAVAudio:)","url":"\/documentation\/ticketmastertickets\/tmticketsmoduleheaderview\/configure(toplabeltext:toplabeltextalignment:centerlabeltext:centerlabeltextalignment:bottomlabeltext:bottomlabeltextalignment:gradientalpha:avcontenturl:disableloopingcontent:disableavaudio:)","title":"configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:avContentURL:disableLoopingContent:disableAVAudio:)"},"Button_Three.jpg":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Button_Three.jpg"}],"alt":"Buttons without Header","identifier":"Button_Three.jpg"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleHeaderView":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"TMTicketsModuleHeaderView","kind":"identifier"}],"url":"\/documentation\/ticketmastertickets\/tmticketsmoduleheaderview","type":"topic","role":"symbol","abstract":[{"text":"quickly build a UIView for ","type":"text"},{"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView","type":"reference","isActive":true}],"kind":"symbol","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView","navigatorTitle":[{"kind":"identifier","text":"TMTicketsModuleHeaderView"}],"title":"TMTicketsModuleHeaderView"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleHeaderView/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:mapCoordinateRegion:mapAnnotation:)":{"title":"configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:mapCoordinateRegion:mapAnnotation:)","url":"\/documentation\/ticketmastertickets\/tmticketsmoduleheaderview\/configure(toplabeltext:toplabeltextalignment:centerlabeltext:centerlabeltextalignment:bottomlabeltext:bottomlabeltextalignment:gradientalpha:mapcoordinateregion:mapannotation:)","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:mapCoordinateRegion:mapAnnotation:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"configure with map region and annotation"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"configure"},{"kind":"text","text":"("},{"kind":"externalParam","text":"topLabelText"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"text":"topLabelTextAlignment","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@E@NSTextAlignment","text":"NSTextAlignment"},{"text":"?, ","kind":"text"},{"text":"centerLabelText","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"centerLabelTextAlignment"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@E@NSTextAlignment","text":"NSTextAlignment","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"bottomLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"bottomLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@E@NSTextAlignment","text":"NSTextAlignment"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"gradientAlpha"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"mapCoordinateRegion"},{"text":": ","kind":"text"},{"text":"MKCoordinateRegion","preciseIdentifier":"c:@SA@MKCoordinateRegion","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"mapAnnotation","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(pl)MKAnnotation","kind":"typeIdentifier","text":"MKAnnotation"},{"text":"?)","kind":"text"}]},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModule/init(identifier:headerDisplay:actionButtons:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"identifier"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"headerDisplay","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:19TicketmasterTickets15TMTicketsModuleC13HeaderDisplayC","kind":"typeIdentifier","text":"HeaderDisplay"},{"text":"?, ","kind":"text"},{"text":"actionButtons","kind":"externalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:19TicketmasterTickets15TMTicketsModuleC12ActionButtonC","text":"ActionButton"},{"kind":"text","text":"]?)"}],"kind":"symbol","type":"topic","role":"symbol","title":"init(identifier:headerDisplay:actionButtons:)","abstract":[{"type":"text","text":"create a module with the given identifier, header, and action buttons"}],"url":"\/documentation\/ticketmastertickets\/tmticketsmodule\/init(identifier:headerdisplay:actionbuttons:)","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule\/init(identifier:headerDisplay:actionButtons:)"},"Module_QRText.jpg":{"variants":[{"traits":["1x","light"],"url":"\/images\/Module_QRText.jpg"}],"type":"image","identifier":"Module_QRText.jpg","alt":"QR Code Header"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleHeaderView/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:qrCodeValue:)":{"title":"configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:qrCodeValue:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"configure"},{"text":"(","kind":"text"},{"text":"topLabelText","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"topLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"text":"?, ","kind":"text"},{"text":"centerLabelText","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"centerLabelTextAlignment"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@E@NSTextAlignment","text":"NSTextAlignment","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"bottomLabelText"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"bottomLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"text":"gradientAlpha","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"backgroundImage"},{"text":": ","kind":"text"},{"text":"UIImage","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)UIImage"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"qrCodeValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"configure with background image and QR code"}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:qrCodeValue:)","url":"\/documentation\/ticketmastertickets\/tmticketsmoduleheaderview\/configure(toplabeltext:toplabeltextalignment:centerlabeltext:centerlabeltextalignment:bottomlabeltext:bottomlabeltextalignment:gradientalpha:backgroundimage:qrcodevalue:)","type":"topic"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModule":{"kind":"symbol","type":"topic","navigatorTitle":[{"text":"TMTicketsModule","kind":"identifier"}],"title":"TMTicketsModule","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TMTicketsModule"}],"url":"\/documentation\/ticketmastertickets\/tmticketsmodule","abstract":[{"type":"text","text":"create a custom module to be displayed underneath the user’s list of Tickets on the Tickets listing page"}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule","role":"symbol"},"Module_MapText.jpg":{"variants":[{"url":"\/images\/Module_MapText.jpg","traits":["1x","light"]}],"type":"image","identifier":"Module_MapText.jpg","alt":"Map Header"},"Module_DefinedAspect.jpg":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Module_DefinedAspect.jpg"}],"identifier":"Module_DefinedAspect.jpg","alt":"1x1 Custom Aspect Header"},"Module_VideoText.jpg":{"variants":[{"url":"\/images\/Module_VideoText.jpg","traits":["1x","light"]}],"type":"image","identifier":"Module_VideoText.jpg","alt":"Video Header"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleDelegate/addCustomModules(event:completion:)":{"title":"addCustomModules(event:completion:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"addCustomModules","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"event"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:19TicketmasterTickets16TMPurchasedEventV","text":"TMPurchasedEvent"},{"kind":"text","text":", "},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"customModuleArray"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"TMTicketsModule","preciseIdentifier":"c:@M@TicketmasterTickets@objc(cs)TMTicketsModule"},{"text":"]?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Method is invoked when the user is viewing a specific Event. Client app needs to define an array of custom modules (if any) and return them to the Tickets SDK."}],"required":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleDelegate\/addCustomModules(event:completion:)","url":"\/documentation\/ticketmastertickets\/tmticketsmoduledelegate\/addcustommodules(event:completion:)","type":"topic"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModule/OAuthCookieSettings":{"title":"TMTicketsModule.OAuthCookieSettings","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"OAuthCookieSettings","kind":"identifier"}],"abstract":[],"url":"\/documentation\/ticketmastertickets\/tmticketsmodule\/oauthcookiesettings","type":"topic","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule\/OAuthCookieSettings","navigatorTitle":[{"text":"OAuthCookieSettings","kind":"identifier"}]},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModule/HeaderDisplay-swift.class":{"url":"\/documentation\/ticketmastertickets\/tmticketsmodule\/headerdisplay-swift.class","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HeaderDisplay"}],"navigatorTitle":[{"text":"HeaderDisplay","kind":"identifier"}],"type":"topic","title":"TMTicketsModule.HeaderDisplay","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule\/HeaderDisplay-swift.class"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleHeaderView/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:barcode2DValue:)":{"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:barcode2DValue:)","abstract":[{"type":"text","text":"configure with background image and 2D barcode code"}],"type":"topic","kind":"symbol","url":"\/documentation\/ticketmastertickets\/tmticketsmoduleheaderview\/configure(toplabeltext:toplabeltextalignment:centerlabeltext:centerlabeltextalignment:bottomlabeltext:bottomlabeltextalignment:gradientalpha:backgroundimage:barcode2dvalue:)","title":"configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:barcode2DValue:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"configure","kind":"identifier"},{"kind":"text","text":"("},{"text":"topLabelText","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"topLabelTextAlignment","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@E@NSTextAlignment","text":"NSTextAlignment","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"centerLabelText"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"centerLabelTextAlignment"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@E@NSTextAlignment","kind":"typeIdentifier","text":"NSTextAlignment"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"bottomLabelText"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?, ","kind":"text"},{"text":"bottomLabelTextAlignment","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NSTextAlignment","kind":"typeIdentifier","preciseIdentifier":"c:@E@NSTextAlignment"},{"text":"?, ","kind":"text"},{"text":"gradientAlpha","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"backgroundImage","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UIImage","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)UIImage"},{"text":"?, ","kind":"text"},{"text":"barcode2DValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")"}]},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleHeaderView/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:)":{"type":"topic","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:)","title":"configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:)","role":"symbol","abstract":[{"type":"text","text":"configure with background image"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"configure"},{"kind":"text","text":"("},{"text":"topLabelText","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"topLabelTextAlignment"},{"kind":"text","text":": "},{"text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"centerLabelText"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?, ","kind":"text"},{"text":"centerLabelTextAlignment","kind":"externalParam"},{"kind":"text","text":": "},{"text":"NSTextAlignment","kind":"typeIdentifier","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"text":"bottomLabelText","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"bottomLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"text":"gradientAlpha","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"backgroundImage","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UIImage","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)UIImage"},{"kind":"text","text":")"}],"url":"\/documentation\/ticketmastertickets\/tmticketsmoduleheaderview\/configure(toplabeltext:toplabeltextalignment:centerlabeltext:centerlabeltextalignment:bottomlabeltext:bottomlabeltextalignment:gradientalpha:backgroundimage:)"},"Module_DefaultAspect.jpg":{"variants":[{"traits":["1x","light"],"url":"\/images\/Module_DefaultAspect.jpg"}],"type":"image","identifier":"Module_DefaultAspect.jpg","alt":"Color Header"},"Button_MLBWebpage.jpg":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Button_MLBWebpage.jpg"}],"identifier":"Button_MLBWebpage.jpg","alt":"MLB Webpage"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModule/ActionButton":{"type":"topic","url":"\/documentation\/ticketmastertickets\/tmticketsmodule\/actionbutton","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule\/ActionButton","navigatorTitle":[{"kind":"identifier","text":"ActionButton"}],"abstract":[],"title":"TMTicketsModule.ActionButton","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ActionButton","kind":"identifier"}]},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleHeaderView/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundColor:)":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"configure","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"topLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"topLabelTextAlignment"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@E@NSTextAlignment","text":"NSTextAlignment","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"centerLabelText","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":"?, ","kind":"text"},{"text":"centerLabelTextAlignment","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@E@NSTextAlignment","kind":"typeIdentifier","text":"NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"bottomLabelText"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"bottomLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@E@NSTextAlignment","text":"NSTextAlignment"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"gradientAlpha"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"backgroundColor"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)UIColor","text":"UIColor","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","abstract":[{"text":"configure with background color","type":"text"}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundColor:)","url":"\/documentation\/ticketmastertickets\/tmticketsmoduleheaderview\/configure(toplabeltext:toplabeltextalignment:centerlabeltext:centerlabeltextalignment:bottomlabeltext:bottomlabeltextalignment:gradientalpha:backgroundcolor:)","title":"configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundColor:)"},"Module_ImageText.jpg":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Module_ImageText.jpg"}],"alt":"Image Text Gradient Header","identifier":"Module_ImageText.jpg"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"value":null,"path":"\/topicSections","op":"add"},{"value":null,"op":"add","path":"\/seeAlsoSections"},{"value":"TMTicketsModuleHeaderView","op":"replace","path":"\/references\/doc:~1~1com.ticketmaster.TicketmasterTickets~1documentation~1TicketmasterTickets~1TMTicketsModuleHeaderView\/title"},{"value":[{"kind":"identifier","text":"TMTicketsModuleHeaderView"}],"op":"replace","path":"\/references\/doc:~1~1com.ticketmaster.TicketmasterTickets~1documentation~1TicketmasterTickets~1TMTicketsModuleHeaderView\/fragments"},{"op":"replace","value":"TMTicketsModule","path":"\/references\/doc:~1~1com.ticketmaster.TicketmasterTickets~1documentation~1TicketmasterTickets~1TMTicketsModule\/title"},{"op":"replace","value":[{"kind":"identifier","text":"TMTicketsModule"}],"path":"\/references\/doc:~1~1com.ticketmaster.TicketmasterTickets~1documentation~1TicketmasterTickets~1TMTicketsModule\/fragments"}]}]}